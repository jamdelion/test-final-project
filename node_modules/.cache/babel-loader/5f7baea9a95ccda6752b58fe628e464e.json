{"ast":null,"code":"import _slicedToArray from \"/home/jo/Code/FAC/final-project/react-express-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jo/Code/FAC/final-project/react-express-starter/src/components/Write.jsx\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport voice from \"../images/voice.svg\";\nimport send from \"../images/send.svg\";\nimport profile from \"../images/profile.svg\";\n\nvar fetch = require(\"node-fetch\");\n\nvar dotenv = require(\"dotenv\");\n\ndotenv.config();\n\nfunction Write() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      messageContent = _React$useState2[0],\n      setMessageContent = _React$useState2[1]; // let testMessage = {\n  //   channel: `${process.env.REACT_APP_SLACK_CHANNEL_ID}`,\n  //   text: `${messageContent}`,\n  // };\n  // function sendSlackbotStartMsg(messageData) {\n  //   console.log(process.env.REACT_APP_INCOMING_WEBHOOK_URL)\n  //   fetch(`${process.env.REACT_APP_INCOMING_WEBHOOK_URL}`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       Authorization: \"Bearer \" + process.env.REACT_APP_BOT_USER_OAUTH_TOKEN,\n  //     },\n  //     body: JSON.stringify(messageData),\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) throw new Error(response.status);\n  //       return response;\n  //     })\n  //     .then((res) => console.log(res.status, res.statusText))\n  //     .catch((error) => console.error(error));\n  // }\n  // function sendSlackbotStartMsg(messageData) {\n  //   fetch(`/api/slack`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       Authorization: \"Bearer \" + process.env.REACT_APP_BOT_USER_OAUTH_TOKEN,\n  //     },\n  //     body: JSON.stringify(messageData),\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) throw new Error(response.status);\n  //       return response;\n  //     })\n  //     .then((res) => console.log(res.status, res.statusText))\n  //     .catch((error) => console.error(error));\n  // }\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch('/api/slack', {\n      method: \"POST\"\n    }).then(function (response) {\n      // console.log(\"response\", response)\n      response.json(); // console.log('response.json()', response.json())\n    }).catch(function (error) {\n      return console.error(\"Oops!\", error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Go back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageTo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"To: Jo\", /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"text\",\n    placeholder: \"Start typing...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"msgButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/speak\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: voice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Press here to speak your message \")))), /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Write; //  <form action=\"post-review\" method=\"POST\"","map":{"version":3,"sources":["/home/jo/Code/FAC/final-project/react-express-starter/src/components/Write.jsx"],"names":["React","Link","withRouter","Nav","fetch","require","dotenv","config","Write","useState","messageContent","setMessageContent","handleSubmit","event","preventDefault","method","then","response","json","catch","error","console","profile","voice"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;;;AAIA,IAAMC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACAC,MAAM,CAACC,MAAP;;AAEA,SAASC,KAAT,GAAiB;AAAA,wBAC6BR,KAAK,CAACS,QAAN,CAAe,EAAf,CAD7B;AAAA;AAAA,MACRC,cADQ;AAAA,MACQC,iBADR,wBAEf;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,KAAK,CAAC,YAAD,EAAe;AACpBW,MAAAA,MAAM,EAAE;AADY,KAAf,CAAL,CAGGC,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChB;AACAA,MAAAA,QAAQ,CAACC,IAAT,GAFgB,CAGhB;AACD,KAPH,EAQGC,KARH,CAQS,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB,CAAX;AAAA,KART;AASD;;AAED,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEE,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKG;AAAM,IAAA,QAAQ,EAAEV,YAAhB;AAA8B,IAAA,MAAM,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAU,IAAA,EAAE,EAAC,MAAb;AAAoB,IAAA,WAAW,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,CALH,eAyBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,GAAG,EAAEW,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHF,CADF,CAzBF,CAJF,eAqCE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,CADF;AAyCD;;AAED,eAAef,KAAf,C,CAGA","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport voice from \"../images/voice.svg\";\nimport send from \"../images/send.svg\";\nimport profile from \"../images/profile.svg\";\nconst fetch = require(\"node-fetch\");\nconst dotenv = require(\"dotenv\");\ndotenv.config();\n\nfunction Write() {\n  const [messageContent, setMessageContent] = React.useState(\"\");\n  // let testMessage = {\n  //   channel: `${process.env.REACT_APP_SLACK_CHANNEL_ID}`,\n  //   text: `${messageContent}`,\n  // };\n\n  // function sendSlackbotStartMsg(messageData) {\n  //   console.log(process.env.REACT_APP_INCOMING_WEBHOOK_URL)\n  //   fetch(`${process.env.REACT_APP_INCOMING_WEBHOOK_URL}`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       Authorization: \"Bearer \" + process.env.REACT_APP_BOT_USER_OAUTH_TOKEN,\n  //     },\n  //     body: JSON.stringify(messageData),\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) throw new Error(response.status);\n  //       return response;\n  //     })\n  //     .then((res) => console.log(res.status, res.statusText))\n  //     .catch((error) => console.error(error));\n  // }\n\n  // function sendSlackbotStartMsg(messageData) {\n  //   fetch(`/api/slack`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       Authorization: \"Bearer \" + process.env.REACT_APP_BOT_USER_OAUTH_TOKEN,\n  //     },\n  //     body: JSON.stringify(messageData),\n  //   })\n  //     .then((response) => {\n  //       if (!response.ok) throw new Error(response.status);\n  //       return response;\n  //     })\n  //     .then((res) => console.log(res.status, res.statusText))\n  //     .catch((error) => console.error(error));\n  // }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch('/api/slack', {\n    method: \"POST\"\n  })\n      .then(response => {\n        // console.log(\"response\", response)\n        response.json()\n        // console.log('response.json()', response.json())\n      })\n      .catch((error) => console.error(\"Oops!\", error));\n  }\n\n  return (\n    <>\n      <button>\n        <a href=\"/messages\">Go back</a>\n      </button>\n      <div className=\"messageContainer\">\n        <div className=\"messageTo\">\n          To: Jo\n          <img className=\"avatar\" src={profile}></img>\n        </div>\n         <form onSubmit={handleSubmit} method=\"POST\">\n            <textarea id=\"text\" placeholder=\"Start typing...\"></textarea>\n            <button type=\"submit\">Submit</button>\n          </form>\n        {/* <form action=\"/api/slack\" method=\"POST\" onChange={(event) => setMessageContent(event.target.value)}>\n          <textarea placeholder=\"Start typing...\"></textarea>\n          <button type=\"button\" onClick={handleSubmit}>Send</button>\n          <a href=\"/success\">\n            <img src={send}></img>\n            Send\n          </a> */}\n\n          {/* <button\n            type=\"submit\"\n            onClick={() => {\n              console.log(\"works\");\n              sendSlackbotStartMsg(testMessage);\n            }}\n          ></button> */}\n        {/* </form> */}\n        <div className=\"msgButtons\">\n          <a href=\"/speak\">\n            {/* we should change this to be state based rather than page */}\n            <img src={voice}></img>\n            <span>Press here to speak your message </span>\n          </a>\n        </div>\n      </div>\n      <Nav />\n    </>\n  );\n}\n\nexport default Write;\n\n\n//  <form action=\"post-review\" method=\"POST\""]},"metadata":{},"sourceType":"module"}