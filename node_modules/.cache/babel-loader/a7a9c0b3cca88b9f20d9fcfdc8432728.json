{"ast":null,"code":"var _jsxFileName = \"/home/jo/Code/FAC/final-project/react-express-starter/src/components/Speak.jsx\";\nimport React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport microphone from \"../images/microphone.svg\";\nimport write from \"../images/write.svg\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\n\nfunction Speak() {\n  var _useSpeechRecognition = useSpeechRecognition(),\n      transcript = _useSpeechRecognition.transcript,\n      resetTranscript = _useSpeechRecognition.resetTranscript;\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, \"Your browser does not support Speech recognition. \");\n  } // const [recording, setRecording] = React.useState(false);\n\n\n  function toggleRecording() {// setRecording(!recording);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Go back\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"To: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spokenWords\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: SpeechRecognition.startListening({\n      continuous: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: SpeechRecognition.stopListening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Stop\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTranscript,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"microphone\",\n    onClick: toggleRecording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Recording\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: microphone,\n    alt: \"microphone\",\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Press here to type your message\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, transcript), /*#__PURE__*/React.createElement(Link, {\n    to: \"/write\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: write,\n    alt: \"write\",\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Write\")), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Send\"), /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), \";\");\n}\n\nexport default Speak;","map":{"version":3,"sources":["/home/jo/Code/FAC/final-project/react-express-starter/src/components/Speak.jsx"],"names":["React","Link","withRouter","Nav","SpeechRecognition","useSpeechRecognition","Speak","transcript","resetTranscript","browserSupportsSpeechRecognition","toggleRecording","startListening","continuous","stopListening","microphone","write"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAIA,OAAOC,iBAAP,IACEC,oBADF,QAEO,0BAFP;;AAIA,SAASC,KAAT,GAAiB;AAAA,8BACyBD,oBAAoB,EAD7C;AAAA,MACPE,UADO,yBACPA,UADO;AAAA,MACKC,eADL,yBACKA,eADL;;AAGf,MAAI,CAACJ,iBAAiB,CAACK,gCAAlB,EAAL,EAA2D;AACzD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADF;AAGD,GAPc,CASf;;;AACA,WAASC,eAAT,GAA2B,CACzB;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAEN,iBAAiB,CAACO,cAAlB,CAAiC;AACxCC,MAAAA,UAAU,EAAE;AAD4B,KAAjC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAQE;AAAQ,IAAA,OAAO,EAAER,iBAAiB,CAACS,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAQ,IAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,eAWE;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,OAAO,EAAEE,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,eAcE;AAAK,IAAA,GAAG,EAAEI,UAAV;AAAsB,IAAA,GAAG,EAAC,YAA1B;AAAuC,IAAA,SAAS,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAHF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCArBF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,UAAJ,CAtBF,eAuBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEQ,KAAV;AAAiB,IAAA,GAAG,EAAC,OAArB;AAA6B,IAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAvBF,eA2BE;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eA4BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,MADF;AAgCD;;AAED,eAAeT,KAAf","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Nav from \"./Navbar.jsx\";\nimport microphone from \"../images/microphone.svg\";\nimport write from \"../images/write.svg\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\n\nfunction Speak() {\n  const { transcript, resetTranscript } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return (\n      <h1>Your browser does not support Speech recognition. </h1>\n    );\n  }\n\n  // const [recording, setRecording] = React.useState(false);\n  function toggleRecording() {\n    // setRecording(!recording);\n  }\n  return (\n    <div>\n      <p>Go back</p>\n      <p>To: </p>\n      <div className=\"spokenWords\">\n        <button\n          onClick={SpeechRecognition.startListening({\n            continuous: true,\n          })}\n        >\n          Start\n        </button>\n        <button onClick={SpeechRecognition.stopListening}>Stop</button>\n        <button onClick={resetTranscript}>Reset</button>\n\n        <button id=\"microphone\" onClick={toggleRecording}>\n          Recording\n        </button>\n        <img src={microphone} alt=\"microphone\" className=\"icon\"></img>\n        {/* <button id=\"stopRecording\">Stop Recording</button>\n           <img src={microphone} alt=\"microphone\" className=\"icon\"></img>  */}\n      </div>\n      <p>Press here to type your message</p>\n      <p>{transcript}</p>\n      <Link to=\"/write\">\n        <img src={write} alt=\"write\" className=\"icon\"></img>\n        <div>Write</div>\n      </Link>\n      <button id=\"send\">Send</button>\n      <Nav />;\n    </div>\n  );\n}\n\nexport default Speak;\n"]},"metadata":{},"sourceType":"module"}